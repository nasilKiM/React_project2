영화 트레일러 오픈 API를 활용하여 영화 목록을 조회하고 사이트 구현하기

아래 주소를 참고하여 영화 트레일러 API 만들기

[https://developers.themoviedb.org/3/movies/get-movie-videos](https://developers.themoviedb.org/3/movies/get-movie-details)

- API Key를 발급 받아야 사용할 수 있음

1. **react-query를 사용하여 데이터를 캐싱할 것**
2. **로딩 중에는 목록 가장 하단 부에 skelton UI를 나타낼 것**
3. **목록을 불러올 때는 react-query의 useInfiniteQuery를 사용하여 무한 스크롤링으로 불러울 것**
- [https://tanstack.com/query/v4/docs/react/reference/useInfiniteQuery](https://tanstack.com/query/v4/docs/react/reference/useInfiniteQuery)

1. **페이지 구성**
    1. home page
        - 사용 API: /movie/popular
        - 각 영화의 평점 및 짧은 미리보기(소개)가 나타나야함
        - 미리보기는 길이가 길다면 특정 글자 수를 넘어가면 … 으로 표시할 수 있도록 UI를 고려할 것
    2. now playing page
        - 사용 API: /movie/now_playing
    3. upcoming page
        - 사용 API: /movie/upcoming
    4. top-rated pag
        - 사용 API: /movie/top_rated
    5. 영화 상세 페이지
        - 사용 API: /movie/{movie_id}
    6. 검색 결과 페이지
        - 사용 API: /search/movie
        
2. **스크롤 감지하여 ScrollUp button 표시되도록, 누를 시 최상단으로 스크롤 이동**
3. **favicon을 이용하여 웹 표시 아이콘을 수정할 것**

1. **페이지 별 구현 사항**

- movies / 리스트 페이지
    - 한번 당 가져올 데이터 최대 20
    - 제목, 포스터, 미리보기(소개), 별점 표시
    - 포스터 없는 경우, 대체 이미지 사용
    
- movie / 상세 페이지
    - 비디오 있는 경우, 페이지 진입 시 자동으로 비디오 플레이
    - 제목, 포스터, 별점, 제작 연도, 장르 데이터 활용해서 UI 표기
    - 그 외의 데이터 추가 활용 여부는 자유
    
- search
    - 제목, 포스터, 미리보기(소개), 별점
    - 포스터 없는 경우, 대체 이미지 사용

1. **협업 시스템화 하기**
    - 본격적인 팀원 전체 협동 프로젝트로서 페어별이 아닌 조원 4~5인이 함께 진행할 것, 만약 조원이 많거나 혼자 구현이 힘들다고 생각되면 페어끼리 페이지를 나누어도 괜찮음 ( ex) 1페어[검색,상세] 2페어[목록] )
    - best practice를 선출하는 것이 아니므로 반드시 기능별 브랜치를 나누어 작업하고 merge 과정이 히스토리에 보여야하며 컨플릭트 방지를 위해 코드 컨벤션을 명확히 하는 것이 좋음
    - 애자일 방식을 도입할 것, 애자일의 내용은 노션, 지라 등을 통해 관리하여 링크를 README.md에 포함할 것
        
        예시)
        
        - 스프린트 목표 : 토이 프로젝트 구현
        - 데일리스크럼 : 매일 작업 시작 전 , 어제 작업한 내용, 오늘 할 내용을 간략하게 정리하여 개인당 짧게 10분 정도 토의 (1시간을 넘어서면 안됨)
        - 요구사항을 이해하고 백로그 작성
        - 백로그를 토대로 칸반보드 형태의 각 조원 마다의 프로젝트 진행 플로우를 볼 수 있어야함
        - 만약 이슈나 에러가 생겼다면 노션이나 깃허브 이슈를 이용하여 메모하여 팀원들과 공유할 수 있도록 할 것
        - 칸반보드는 노션을 활용해도 되고 지라나 깃허브를 활용해도 상관없음
    
    - 각 조마다의 코드 컨벤션 및 커밋 컨벤션 등을 통일화할 것
    - Eslint와 Prettier를 통해 코드 포멧팅을 통일화 할 것